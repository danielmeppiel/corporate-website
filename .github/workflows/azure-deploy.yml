name: Deploy to Azure

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_NAME: func-corporate-website-prod
  AZURE_FUNCTIONAPP_PACKAGE_PATH: 'server'
  PYTHON_VERSION: '3.11'
  NODE_VERSION: '20'

jobs:
  # Infrastructure deployment (manual trigger only)
  deploy-infrastructure:
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Deploy Bicep templates
      uses: azure/arm-deploy@v1
      with:
        scope: subscription
        subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        region: westeurope
        template: ./infrastructure/bicep/main.bicep
        parameters: ./infrastructure/bicep/parameters/prod.json
        deploymentName: corporate-website-prod-${{ github.run_number }}
    
    - name: Azure Logout
      run: az logout

  # Frontend deployment (automatic on push to main)
  deploy-frontend:
    if: github.event_name == 'push' || github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: true
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build frontend
      run: npm run build
      env:
        NODE_ENV: production
    
    - name: Deploy to Azure Static Web Apps
      id: builddeploy
      uses: Azure/static-web-apps-deploy@v1
      with:
        azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        action: "upload"
        app_location: "/"
        output_location: "dist"
        api_location: "" # API is separate (Azure Functions)

  # Backend deployment (automatic on push to main)
  deploy-backend:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    
    - name: Create and activate virtual environment
      run: |
        cd ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
        python -m venv .venv
        source .venv/bin/activate
    
    - name: Install dependencies
      run: |
        cd ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
        pip install --upgrade pip
        pip install -r requirements.txt --target=".python_packages/lib/site-packages"
    
    - name: Deploy to Azure Functions
      uses: Azure/functions-action@v1
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
        package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
        publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}
        scm-do-build-during-deployment: false
        enable-oryx-build: false
    
    - name: Post-deployment health check
      run: |
        echo "Waiting for function app to be ready..."
        sleep 30
        curl -f https://${{ env.AZURE_FUNCTIONAPP_NAME }}.azurewebsites.net/api/health || echo "Health check endpoint not available"

  # Close Pull Request (cleanup staging environment)
  close-pull-request:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    
    steps:
    - name: Close Pull Request
      uses: Azure/static-web-apps-deploy@v1
      with:
        azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
        action: "close"
